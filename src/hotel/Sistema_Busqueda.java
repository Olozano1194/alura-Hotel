/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package hotel;

import static conexiones.conexion.conectar;
import conexiones.metodos_sql;
import conexiones.metodos_sqlReservas;
import java.awt.BorderLayout;
import java.lang.System.Logger;
import java.lang.System.Logger.Level;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;


/**
 *
 * @author Oscar
 */
public class Sistema_Busqueda extends javax.swing.JFrame {

    /**
     * Creates new form Sistema_Busqueda
     */
    public Sistema_Busqueda() {
        initComponents();
        setResizable(false);
        setLocationRelativeTo(null);
      //  tabla_Datos_BuscarReservas.setVisible(false);
      
     
      
        
    }
    
    metodos_sql metodos = new metodos_sql();
    metodos_sqlReservas metodosReservas = new metodos_sqlReservas();
    
    DefaultTableModel tabla;
    String titulo_ColumnHuespedes []= {"IdHuesped","Nombre","Apellido","Fecha_Nacimiento","Nacionalidad","Telefono","Id_Reserva"};
    String Filas[]= new String [7];
    
    
    String titulo_ColumnaReservas []= {"IdReserva","Fecha_Entrada", "Fecha_Salida", "Valor", "Forma_Pago"};
    String FilasReserva []= new String[5];
    
     
    public void Carga_Datos_TablaHuespedes(){
        
        tabla=new DefaultTableModel(null,titulo_ColumnHuespedes);
        PreparedStatement Sentencia_preparada = null;
        Connection conexion = conectar();
        ResultSet Resultado = null;
        String Consulta_Table="SELECT IdHuesped, Nombre, Apellido, Fecha_Nacimiento, Nacionalidad, Telefono, Id_Reserva FROM huespedes";
        try {
          Sentencia_preparada = conexion.prepareStatement(Consulta_Table);
          Resultado = Sentencia_preparada.executeQuery();
          
          while(Resultado.next()){
              
              Filas[0]=Resultado.getString(1);
              Filas[1]=Resultado.getString(2);
              Filas[2]=Resultado.getString(3);
              Filas[3]=Resultado.getString(4);
              Filas[4]=Resultado.getString(5);
              Filas[5]=Resultado.getString(6);
              Filas[6]=Resultado.getString(7);
           //   Filas[6]=Resultado.getString(7);
            //  Filas[7]=Resultado.getString(8);
           //   Filas[8]=Resultado.getString(9);
              //Filas[9]=Resultado.getString(10);
              tabla.addRow(Filas);
          }
          tabla_Datos_BuscarReservas.setModel(tabla);
          
          conexion.close();
            
        } catch (Exception e) {
            System.out.println("Error:" +e.getMessage());
        }finally{
            try {
                conexion.close();
            } catch (SQLException ex) {
               // Logger.getLogger(Sistema_Busqueda.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error" + ex.getMessage());
            }
        }
    }
    
 
    
     public void Carga_Datos_TablaReservas(){
        
        tabla=new DefaultTableModel(null,titulo_ColumnaReservas);
        PreparedStatement Sentencia_preparada = null;
        Connection conexion = conectar();
        ResultSet Resultado = null;
        String Consulta_Table="SELECT IdReserva, Fecha_Entrada, Fecha_Salida, Valor, Forma_Pago  FROM reservas ";
        try {
          Sentencia_preparada = conexion.prepareStatement(Consulta_Table);
          Resultado = Sentencia_preparada.executeQuery();
          
          while(Resultado.next()){
              
              FilasReserva[0]=Resultado.getString(1);
              FilasReserva[1]=Resultado.getString(2);
              FilasReserva[2]=Resultado.getString(3);
              FilasReserva[3]=Resultado.getString(4);
              FilasReserva[4]=Resultado.getString(5);
              tabla.addRow(FilasReserva);
          }
          tabla_Datos_BuscarReservas.setModel(tabla);
          
          conexion.close();
            
        } catch (Exception e) {
            System.out.println("Error:" +e.getMessage());
        }finally{
            try {
                conexion.close();
            } catch (SQLException ex) {
               // Logger.getLogger(Sistema_Busqueda.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println("Error" + ex.getMessage());
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnBuscar = new javax.swing.JButton();
        txtBuscar = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnHuespedes = new javax.swing.JButton();
        btnReservas = new javax.swing.JButton();
        panelMostrarHuesped = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabla_Datos_BuscarReservas = new javax.swing.JTable();
        btnEditar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnAtras = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Busqueda");

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/logo.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 102, 255));
        jLabel2.setText("SISTEMA DE BÚSQUEDA");

        btnBuscar.setBackground(new java.awt.Color(51, 102, 255));
        btnBuscar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnBuscar.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        txtBuscar.setBackground(new java.awt.Color(242, 242, 242));
        txtBuscar.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtBuscar.setBorder(null);

        jSeparator1.setForeground(new java.awt.Color(51, 102, 255));

        btnHuespedes.setBackground(new java.awt.Color(51, 102, 255));
        btnHuespedes.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnHuespedes.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon-buscar.png"))); // NOI18N
        btnHuespedes.setText("Huéspedes");
        btnHuespedes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHuespedesActionPerformed(evt);
            }
        });

        btnReservas.setBackground(new java.awt.Color(102, 204, 255));
        btnReservas.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        btnReservas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/icon-reservas.png"))); // NOI18N
        btnReservas.setText("Reservas");
        btnReservas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReservasActionPerformed(evt);
            }
        });

        tabla_Datos_BuscarReservas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tabla_Datos_BuscarReservas);

        javax.swing.GroupLayout panelMostrarHuespedLayout = new javax.swing.GroupLayout(panelMostrarHuesped);
        panelMostrarHuesped.setLayout(panelMostrarHuespedLayout);
        panelMostrarHuespedLayout.setHorizontalGroup(
            panelMostrarHuespedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarHuespedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        panelMostrarHuespedLayout.setVerticalGroup(
            panelMostrarHuespedLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMostrarHuespedLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 305, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnEditar.setBackground(new java.awt.Color(51, 102, 255));
        btnEditar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnEditar.setForeground(new java.awt.Color(255, 255, 255));
        btnEditar.setText("EDITAR");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnEliminar.setBackground(new java.awt.Color(51, 102, 255));
        btnEliminar.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        btnEliminar.setForeground(new java.awt.Color(255, 255, 255));
        btnEliminar.setText("ELIMINAR");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnAtras.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        btnAtras.setText("<");
        btnAtras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtrasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnHuespedes)
                        .addGap(18, 18, 18)
                        .addComponent(btnReservas)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(panelMostrarHuesped, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jSeparator1)
                                            .addComponent(txtBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 240, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(btnBuscar))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(165, 165, 165)
                                        .addComponent(jLabel2)
                                        .addGap(0, 186, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnEditar)
                                .addGap(45, 45, 45)
                                .addComponent(btnEliminar)))
                        .addGap(35, 35, 35))))
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(btnAtras)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(btnAtras)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnBuscar)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel2)
                            .addGap(31, 31, 31)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 3, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnReservas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnHuespedes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(21, 21, 21)
                .addComponent(panelMostrarHuesped, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditar)
                    .addComponent(btnEliminar))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnHuespedesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHuespedesActionPerformed
     
        Carga_Datos_TablaHuespedes();
    }//GEN-LAST:event_btnHuespedesActionPerformed

    private void btnReservasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReservasActionPerformed
   
        Carga_Datos_TablaReservas();
    }//GEN-LAST:event_btnReservasActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed
        
        int Fila= tabla_Datos_BuscarReservas.getSelectedRow();
      //  int FilaReserva = tabla_Datos_BuscarReservas.getSelectedRow();
        
        if (tabla_Datos_BuscarReservas.getColumnName(0).equals("IdHuesped")) {
            
            actualizarDatosHuesped();
            Carga_Datos_TablaHuespedes();
            
        }else if (tabla_Datos_BuscarReservas.getColumnName(0).equals("IdReserva")) {
            
            actualizarDatosReserva();
            Carga_Datos_TablaReservas();
        }
 
    
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
       
        
        
        // Obtener la fila seleccionada en la tabla
        int filaSeleccionada = tabla_Datos_BuscarReservas.getSelectedRow();

        // Verificar si se seleccionó una fila
        if (filaSeleccionada != -1) {

            int confirmar = JOptionPane.showConfirmDialog(null, "Desea Eliminar los datos");

            if (confirmar == JOptionPane.YES_OPTION) {

                //Verificar si se selecciono un registro de la tabla huespedes o reserva
                if (tabla_Datos_BuscarReservas.getColumnName(0).equals("IdHuesped")) {
                    // Obtener el valor del campo "Id" de la fila seleccionada //tabla huesped
                    int idHuesped = Integer.parseInt(tabla_Datos_BuscarReservas.getValueAt(filaSeleccionada, 0).toString());

                    // Eliminar el registro de la base de datos
                    metodos.EliminarHuesped(idHuesped);

                    // Actualizar la tabla
                    Carga_Datos_TablaHuespedes();

                } else if (tabla_Datos_BuscarReservas.getColumnName(0).equals("IdReserva")) {

                    int idReservas = Integer.parseInt(tabla_Datos_BuscarReservas.getValueAt(filaSeleccionada, 0).toString());

                    metodosReservas.EliminarReserva(idReservas);

                    Carga_Datos_TablaHuespedes();

                }

            }

        } else {

            JOptionPane.showMessageDialog(this, "Selecciona un registro para eliminar", "Advertencia", JOptionPane.WARNING_MESSAGE);
        } 


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
       
        int Fila= tabla_Datos_BuscarReservas.getSelectedRow();
        
        if (tabla_Datos_BuscarReservas.getColumnName(0).equals("IdHuesped")) {
        
            Busqueda_Filtrar_Huesped(txtBuscar.getText());
            
        }else if (tabla_Datos_BuscarReservas.getColumnName(0).equals("IdReserva")) {
            
            Busqueda_Filtrar_Reserva(txtBuscar.getText());
        }
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAtrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtrasActionPerformed
        
        menu_Usuario menuUsuario = new menu_Usuario();
        menuUsuario.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnAtrasActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sistema_Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sistema_Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sistema_Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sistema_Busqueda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sistema_Busqueda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtras;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnHuespedes;
    private javax.swing.JButton btnReservas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel panelMostrarHuesped;
    private javax.swing.JTable tabla_Datos_BuscarReservas;
    private javax.swing.JTextField txtBuscar;
    // End of variables declaration//GEN-END:variables

public void actualizarDatosHuesped(){
    
    int Fila= tabla_Datos_BuscarReservas.getSelectedRow();
        
        if (Fila == -1) {
            
            JOptionPane.showMessageDialog(null, "Por favor seleccione un registro a editar");
            return ;
            
        }
        
        
        String nombre = tabla_Datos_BuscarReservas.getValueAt(Fila, 1).toString();
        String apellido = tabla_Datos_BuscarReservas.getValueAt(Fila, 2).toString();
        String fechaNacimiento = tabla_Datos_BuscarReservas.getValueAt(Fila, 3).toString();
        String nacionalidad = tabla_Datos_BuscarReservas.getValueAt(Fila, 4).toString();
        String telefono = tabla_Datos_BuscarReservas.getValueAt(Fila, 5).toString();
        int idReserva =Integer.valueOf(tabla_Datos_BuscarReservas.getValueAt(Fila, 6).toString());
        int idHuesped =Integer.valueOf( tabla_Datos_BuscarReservas.getValueAt(Fila, 0).toString()); 
    
        metodos.Modificar_Datos_Huespedes(nombre, apellido, fechaNacimiento, nacionalidad, telefono, idReserva, idHuesped);
        
        Carga_Datos_TablaHuespedes();
}

public void actualizarDatosReserva(){
    
    int Fila= tabla_Datos_BuscarReservas.getSelectedRow();
        
        if (Fila == -1) {
            
            JOptionPane.showMessageDialog(null, "Por favor seleccione un registro a editar");
            return ;
            
        }
        
        String checkIn = tabla_Datos_BuscarReservas.getValueAt(Fila, 1).toString();
        String checkOut = tabla_Datos_BuscarReservas.getValueAt(Fila, 2).toString();
        int valorTarifa = Integer.valueOf(tabla_Datos_BuscarReservas.getValueAt(Fila, 3).toString());
        String formaPago = tabla_Datos_BuscarReservas.getValueAt(Fila, 4).toString();
        int id_Reserva = Integer.valueOf(tabla_Datos_BuscarReservas.getValueAt(Fila, 0).toString()); 
        
             
        metodosReservas.ModificarDatosReserva(checkIn, checkOut, valorTarifa, formaPago, id_Reserva);
        
        Carga_Datos_TablaHuespedes();
}


public void Busqueda_Filtrar_Huesped(String txtBuscar){
        
        tabla=new DefaultTableModel(null,titulo_ColumnHuespedes);
        PreparedStatement Sentencia_preparada = null;
        Connection conexion = conectar();
        ResultSet Resultado = null;
        String Consulta_Table="SELECT * FROM huespedes WHERE IdHuesped LIKE " + '"' + txtBuscar + "%" + '"';
        try {
          Sentencia_preparada = conexion.prepareStatement(Consulta_Table);
          Resultado = Sentencia_preparada.executeQuery();
          
          while(Resultado.next()){
              
              Filas[0]=Resultado.getString(1);
              Filas[1]=Resultado.getString(2);
              Filas[2]=Resultado.getString(3);
              Filas[3]=Resultado.getString(4);
              Filas[4]=Resultado.getString(5);
              Filas[5]=Resultado.getString(6);
              Filas[6]=Resultado.getString(7);
              tabla.addRow(Filas);
          }
          tabla_Datos_BuscarReservas.setModel(tabla);
          
          conexion.close();
            
        } catch (Exception e) {
            System.out.println("Error:" +e);
        }finally{
            try {
                conexion.close();
            } catch (SQLException ex) {
            //    Logger.getLogger(Buscar_Empleados.class.getName()).log(Level.SEVERE, null, ex);
                 System.out.println("Error" + ex);
            }
        }
    }


public void Busqueda_Filtrar_Reserva(String txtBuscar){
        
        tabla=new DefaultTableModel(null,titulo_ColumnaReservas);
        PreparedStatement Sentencia_preparada = null;
        Connection conexion = conectar();
        ResultSet Resultado = null;
        String Consulta_Table="SELECT * FROM reservas WHERE IdReserva LIKE " + '"' + txtBuscar + "%" + '"';
        try {
          Sentencia_preparada = conexion.prepareStatement(Consulta_Table);
          Resultado = Sentencia_preparada.executeQuery();
          
          while(Resultado.next()){
              
              Filas[0]=Resultado.getString(1);
              Filas[1]=Resultado.getString(2);
              Filas[2]=Resultado.getString(3);
              Filas[3]=Resultado.getString(4);
              Filas[4]=Resultado.getString(5);
              tabla.addRow(Filas);
          }
          tabla_Datos_BuscarReservas.setModel(tabla);
          
          conexion.close();
            
        } catch (Exception e) {
            System.out.println("Error:" +e);
        }finally{
            try {
                conexion.close();
            } catch (SQLException ex) {
            //    Logger.getLogger(Buscar_Empleados.class.getName()).log(Level.SEVERE, null, ex);
                 System.out.println("Error" + ex.getMessage());
            }
        }
    }


}
